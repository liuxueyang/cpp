示例 1:

输入: s = "abc", order = [1,0,2], k = 2

输出: 0

解释:

t	order[t]	修改后的 s	有效子字符串	计数	激活状态
(计数 >= k)
0	1	"a*c"	"*", "a*", "*c", "a*c"	4	是
字符串 s 在 t = 0 时变为激活状态。因此，答案是 0。

示例 2:

输入: s = "cat", order = [0,2,1], k = 6

输出: 2

解释:

t	order[t]	修改后的 s	有效子字符串	计数	激活状态
(计数 >= k)
0	0	"*at"	"*", "*a", "*at"	3	否
1	2	"*a*"	"*", "*a", "*a*", "a*", "*"	5	否
2	1	"***"	所有子字符串(包含 '*')	6	是
字符串 s 在 t = 2 时变为激活状态。因此，答案是 2。

示例 3:

输入: s = "xy", order = [0,1], k = 4

输出: -1

解释:

即使完成所有替换，也无法得到 k = 4 个有效子字符串。因此，答案是 -1。©leetcode

s =
"xzrpf"
order =
[1,2,4,3,0]
k =
13
Expect 2

s =
"yzhh"
order =
[2,1,0,3]
k =
10
Expect 3
